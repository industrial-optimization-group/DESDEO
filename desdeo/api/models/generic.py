"""Generic models for the DESDEO API."""

from sqlmodel import JSON, Column, Field, SQLModel

from desdeo.api.models import SolutionAddress, UserSavedSolutionAddress


class IntermediateSolutionRequest(SQLModel):
    """Model of the request to solve intermediate solutions between two solutions."""

    problem_id: int
    session_id: int | None = Field(default=None)
    parent_state_id: int | None = Field(default=None)
    context: str | None = None # Method context (nimbus, rpm, etc.)
    scalarization_options: dict[str, float | str | bool] | None = Field(sa_column=Column(JSON), default=None)
    solver: str | None = Field(default=None)
    solver_options: dict[str, float | str | bool] | None = Field(sa_column=Column(JSON), default=None)

    num_desired: int | None = Field(default=1)

    reference_solution_1: SolutionAddress
    reference_solution_2: SolutionAddress

class IntermediateSolutionResponse(SQLModel):
    """The response from NIMBUS classification endpoint."""

    state_id: int | None = Field(description="The newly created state id")
    reference_solution_1: dict[str, float] = Field(sa_column=Column(JSON), description="The first previous solutions objectives used for intermediate solution.")
    reference_solution_2: dict[str, float] = Field(sa_column=Column(JSON), description="The second previous solutions objectives used for intermediate solution.")
    current_solutions: list[SolutionAddress] = Field(description="The solutions from the current interation of nimbus.")
    saved_solutions: list[UserSavedSolutionAddress] = Field(description="The best candidate solutions saved by the decision maker.")
    all_solutions: list[SolutionAddress] = Field(description="All solutions generated by NIMBUS in all iterations.")
