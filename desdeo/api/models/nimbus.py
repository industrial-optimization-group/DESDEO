"""Models specific to the nimbus method."""

from sqlmodel import JSON, Column, Field, SQLModel

from desdeo.api.models import SolutionAddress, UserSavedSolutionAddress

from .preference import ReferencePoint


class NIMBUSClassificationRequest(SQLModel):
    """Model of the request to the nimbus method."""

    problem_id: int
    session_id: int | None = Field(default=None)
    parent_state_id: int | None = Field(default=None)

    scalarization_options: dict[str, float | str | bool] | None = Field(sa_column=Column(JSON), default=None)
    solver: str | None = Field(default=None)
    solver_options: dict[str, float | str | bool] | None = Field(sa_column=Column(JSON), default=None)
    preference: ReferencePoint = Field(Column(JSON))

    current_objectives: dict[str, float] = Field(sa_column=Column(JSON), description="The objectives used for iteration.")
    num_desired: int | None = Field(default=1)


class NIMBUSSaveRequest(SQLModel):
    """Request model for saving solutions from any method's state."""

    problem_id: int
    session_id: int | None = Field(default=None)
    parent_state_id: int | None = Field(default=None)

    solutions: list[UserSavedSolutionAddress]  # List of solutions to save

class NIMBUSClassificationResponse(SQLModel):
    """The response from NIMBUS classification endpoint."""

    state_id: int | None = Field(description="The newly created state id")
    previous_preference: ReferencePoint = Field(description="The previous preference used.")
    previous_objectives: dict[str, float] = Field(sa_column=Column(JSON), description="The previous solutions objectives used for iteration.")
    current_solutions: list[SolutionAddress] = Field(description="The solutions from the current interation of nimbus.")
    saved_solutions: list[UserSavedSolutionAddress] = Field(description="The best candidate solutions saved by the decision maker.")
    all_solutions: list[SolutionAddress] = Field(description="All solutions generated by NIMBUS in all iterations.")

class NIMBUSInitializationResponse(SQLModel):
    """The response from NIMBUS classification endpoint."""

    state_id: int | None = Field(description="The newly created state id")
    current_solutions: list[SolutionAddress] = Field(description="The solutions from the current interation of nimbus.")
    saved_solutions: list[UserSavedSolutionAddress] = Field(description="The best candidate solutions saved by the decision maker.")
    all_solutions: list[SolutionAddress] = Field(description="All solutions generated by NIMBUS in all iterations.")

class NIMBUSSaveResponse(SQLModel):
    """The response from NIMBUS save endpoint"""

    state_id: int | None = Field(description="The id of the newest state")

    
class NIMBUSInitializationRequest(SQLModel):
    """Model of the request to the nimbus method."""

    problem_id: int
    session_id: int | None = Field(default=None)
    parent_state_id: int | None = Field(default=None)

    solver: str | None = Field(default=None)

